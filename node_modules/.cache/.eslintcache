[{"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\index.js":"1","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\reportWebVitals.js":"2","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\App.js":"3","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\AddOrUpdateEmployee.jsx":"4","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\Employees.jsx":"5","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\ListEmployee.jsx":"6","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\Navbar.jsx":"7","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\ViewEmployee.jsx":"8","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\services\\EmployeeService.js":"9","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\constants\\index.js":"10"},{"size":675,"mtime":1677740496000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1677680916000,"results":"13","hashOfConfig":"12"},{"size":1137,"mtime":1690097416000,"results":"14","hashOfConfig":"12"},{"size":8156,"mtime":1690097298000,"results":"15","hashOfConfig":"12"},{"size":7668,"mtime":1690097124000,"results":"16","hashOfConfig":"12"},{"size":4376,"mtime":1690096232000,"results":"17","hashOfConfig":"12"},{"size":1478,"mtime":1690097198000,"results":"18","hashOfConfig":"12"},{"size":5408,"mtime":1690096194000,"results":"19","hashOfConfig":"12"},{"size":1313,"mtime":1677744700000,"results":"20","hashOfConfig":"12"},{"size":87,"mtime":1677682836000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13joncf",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\index.js",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\reportWebVitals.js",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\App.js",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\AddOrUpdateEmployee.jsx",["53"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\nimport { addEmployee, getEmployee, updateEmployeee } from '../services/EmployeeService'\r\n\r\nconst AddOrUpdateEmployee = () => {\r\n\r\n    const employee = {\r\n        first_name: '',\r\n        last_name: '',\r\n        contact_number: '',\r\n        birth_date: '',\r\n        address_1: '',\r\n        address_2: '',\r\n        email: ''\r\n    }\r\n\r\n    const [employees, setEmployees] = useState(employee)\r\n    const { id } = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (id)\r\n            getEmployee(id)\r\n                .then(response => setEmployees({ ...response.data, birth_date: response.data.birth_date.split('-').reverse().join('-') }))\r\n                .catch(error => toast.error(error.message))\r\n        else\r\n            setEmployees(employee)\r\n\r\n    }, [id])\r\n\r\n    const handleInput = event => {\r\n        const { name, value } = event.target\r\n        setEmployees({ ...employees, [name]: value })\r\n    }\r\n\r\n    const saveOrUpdate = event => {\r\n        event.preventDefault()\r\n        const employeeDTO = {\r\n            first_name: employees.first_name, last_name: employees.last_name, contact_number: employees.contact_number,\r\n            birth_date: employees.birth_date.split(\"-\").reverse().join(\"-\"), address_1: employees.address_1, address_2: employees.address_2, email: employees.email\r\n        }\r\n\r\n        if (id)\r\n            updateEmployeee(id, employeeDTO)\r\n                .then(() => {\r\n                    toast.success(\"Employee updated successfully\")\r\n                    navigate('/allemployees')\r\n                })\r\n                .catch(error => toast.error(error.message))\r\n        else\r\n            addEmployee(employeeDTO)\r\n                .then(() => {\r\n                    toast.success(\"Employee added successfully\")\r\n                    navigate('/allemployees')\r\n                })\r\n                .catch(error => toast.error(error.message))\r\n    }\r\n\r\n    const reset = () => {\r\n        setEmployees(employee)\r\n    }\r\n\r\n    const navigateToBack = (e) => {\r\n        navigate(-1)\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\" >\r\n            <div className=\"col-md-10 mx-auto\">\r\n                <div className=\"card\" style={{ backgroundColor: '#fce6ea' }}>\r\n                    {\r\n                        id ? <h4 className='mt-2 mb-0'>Update Employee</h4> : <h4 className='mt-2 mb-0'>Add New Employee</h4>\r\n                    }\r\n                    <hr />\r\n                    <div className='card-body'>\r\n                        <div className=\"col-10 mx-auto\">\r\n                            <form onSubmit={saveOrUpdate}>\r\n                                <div className='row mb-1'>\r\n                                    <div className='col mb-3'>\r\n                                        <div className=\"form-floating\">\r\n                                            <input type=\"text\" className=\"form-control\" name='first_name' id=\"first_name\" placeholder=\"First Name\" autoComplete='off'\r\n                                                required value={employees.first_name} onChange={handleInput}\r\n                                            />\r\n                                            <label htmlFor=\"first_name\">First Name</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col mb-3'>\r\n                                        <div className=\"form-floating\">\r\n                                            <input type=\"text\" className=\"form-control\" name='last_name' id=\"last_name\" placeholder=\"Last Name\" autoComplete='off'\r\n                                                required value={employees.last_name} onChange={handleInput}\r\n                                            />\r\n                                            <label htmlFor=\"last_name\">Last Name</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row mb-3'>\r\n                                    <div className='col'>\r\n                                        <div className=\"form-floating \">\r\n                                            <input type=\"text\" className=\"form-control\" name='email' id=\"email\" placeholder=\"name@example.com\" autoComplete='off'\r\n                                                required value={employees.email} onChange={handleInput}\r\n                                            />\r\n                                            <label htmlFor=\"email\">Email address</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col'>\r\n                                        <div className=\"form-floating\">\r\n                                            <input type=\"text\" className=\"form-control\" name='contact_number' id=\"contact_number\" placeholder=\"Contact Number\" autoComplete='off'\r\n                                                required value={employees.contact_number} onChange={handleInput}\r\n                                            />\r\n                                            <label htmlFor=\"contact_number\">Contact Number</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='col'>\r\n                                        <div className=\"form-floating \">\r\n                                            <input type=\"date\" className=\"form-control\" name='birth_date' id=\"birth_date\" placeholder=\"DOB\" autoComplete='off'\r\n                                                required value={employees.birth_date} onChange={handleInput}\r\n                                            />\r\n                                            <label htmlFor=\"birth_date\">DOB</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <textarea type=\"text\" className=\"form-control\" name='address_1' id=\"address_1\" placeholder=\"Address 1\" autoComplete='off' style={{ minHeight: '120px', maxHeight: '120px' }}\r\n                                        required value={employees.address_1} onChange={handleInput}\r\n                                    />\r\n                                    <label htmlFor=\"address_1\">Address 1</label>\r\n                                </div>\r\n                                <div className=\"form-floating mb-3\">\r\n                                    <textarea type=\"text\" className=\"form-control\" name='address_2' id=\"address_2\" placeholder=\"Address 2\" autoComplete='off' style={{ minHeight: '120px', maxHeight: '120px' }}\r\n                                        required value={employees.address_2} onChange={handleInput}\r\n                                    />\r\n                                    <label htmlFor=\"address_2\">Address 2</label>\r\n                                </div>\r\n                                <br />\r\n                                <div className='d-flex justify-content-center gap-3'>\r\n                                    {\r\n                                        id ? <button type='submit' className='btn btn-success'>Update</button> : <button type='submit' className='btn btn-success'>Add</button>\r\n                                    }\r\n                                    <button type=\"button\" className='btn btn-danger' onClick={() => reset()}>Reset</button>\r\n                                    <button type=\"button\" className='btn btn-secondary' onClick={() => navigateToBack()}>Back</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n                <br />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOrUpdateEmployee","D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\Employees.jsx",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\ListEmployee.jsx",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\Navbar.jsx",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\components\\ViewEmployee.jsx",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\services\\EmployeeService.js",[],[],"D:\\Full Stack Projects\\Employee Management App\\employee_mangement\\src\\constants\\index.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":30,"column":8,"nodeType":"56","endLine":30,"endColumn":12,"suggestions":"57"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'employee'. Either include it or remove the dependency array.","ArrayExpression",["58"],{"desc":"59","fix":"60"},"Update the dependencies array to be: [employee, id]",{"range":"61","text":"62"},[941,945],"[employee, id]"]